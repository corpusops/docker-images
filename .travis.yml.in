---
services: [docker]
language: python
env:
  global:
    - |
      RELEASE_DEBUG="" \
      COPS_URL="https://github.com/corpusops/corpusops.bootstrap" \
      COPS_ROOT="$TRAVIS_BUILD_DIR/local/corpusops.bootstrap" \
      funcs="$COPS_ROOT/bin/cops_shell_common" \
      silent="$funcs output_in_error silent_vv" \
      apply_role="sudo -E $silent $COPS_ROOT/bin/cops_apply_role -vvvvv" \
      install="sudo -E $silent $COPS_ROOT/bin/install.sh" \
      sync_code="$install -C --synchronize-code --skip-sync-core" \
      release="$COPS_ROOT/hacking/docker_release" \
      silent_rm="$silent rm -rf"
  matrix:$__IMAGES
cache: {directories: ["$HOME/.cache/pip", "$COPS_ROOT"]}
before_install:
- sudo apt-get update -qq
- sudo apt-get install -qq -y --force-yes parallel
- sudo service docker stop
- "[ -e $COPS_ROOT/.git ] || git clone $COPS_URL $COPS_ROOT"
- cd $COPS_ROOT
- git fetch origin && git reset --hard origin/master
- $install -C -S
- $sync_code || ( $silent_rm $COPS_ROOT/{roles,playbooks}/corpusops* && $sync_code )
- sh -c "$apply_role roles/corpusops.roles/services_virt_docker/role.yml"
- i=$(whoami) && sudo chown -Rf $i $COPS_ROOT
script:
- echo "building $IMAGES" >&2
- cd "$TRAVIS_BUILD_DIR" && $silent ./build.sh $IMAGES
after_success:
- docker images | grep -v none | sort -V
- export DOCKER_IMAGES="$(docker images | grep "corpusops/" | awk '{print $1}' )"
  && echo "$DOCKER_IMAGES"
- if [ "x$RELEASE_DEBUG" = "x" ]
    then DEBUG=$RELEASE_DEBUG $funcs vv $release $DOCKER_IMAGES
    else $silent $release $DOCKER_IMAGES
  fi
