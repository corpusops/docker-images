---
services: [docker]
language: python
dist: focal
git: {lfs_skip_smudge: true}
env:
  global:
    - |
      RELEASE_DEBUG="" \
      NBPARALLEL="2" \
      DO_RELEASE="1" \
      RELEASABLE_REPOS="corpusops/" \
      COPS_URL="https://github.com/corpusops/corpusops.bootstrap" \
      COPS_ROOT="$TRAVIS_BUILD_DIR/local/corpusops.bootstrap" \
      funcs="$COPS_ROOT/bin/cops_shell_common" \
      silent="$funcs output_in_error silent_vv" \
      apply_role="sudo -E $silent $COPS_ROOT/bin/cops_apply_role -vvvvv" \
      install="sudo -E $silent $COPS_ROOT/bin/install.sh" \
      sync_code="$install -C --synchronize-code --skip-sync-core" \
      release="$COPS_ROOT/hacking/docker_release" \
      silent_rm="$silent rm -rf"
  matrix:$__IMAGES
# all images that werent explicitly told to be built would be built in the next batches
# we span them onto N jobs
  - IMAGES="leftover:1/91"
  - IMAGES="leftover:2/91"
  - IMAGES="leftover:3/91"
  - IMAGES="leftover:4/91"
  - IMAGES="leftover:5/91"
  - IMAGES="leftover:6/91"
  - IMAGES="leftover:7/91"
  - IMAGES="leftover:8/91"
  - IMAGES="leftover:9/91"
  - IMAGES="leftover:10/91"
  - IMAGES="leftover:11/91"
  - IMAGES="leftover:12/91"
  - IMAGES="leftover:13/91"
  - IMAGES="leftover:14/91"
  - IMAGES="leftover:15/91"
  - IMAGES="leftover:16/91"
  - IMAGES="leftover:17/91"
  - IMAGES="leftover:18/91"
  - IMAGES="leftover:19/91"
  - IMAGES="leftover:20/91"
  - IMAGES="leftover:21/91"
  - IMAGES="leftover:22/91"
  - IMAGES="leftover:23/91"
  - IMAGES="leftover:24/91"
  - IMAGES="leftover:25/91"
  - IMAGES="leftover:26/91"
  - IMAGES="leftover:27/91"
  - IMAGES="leftover:28/91"
  - IMAGES="leftover:29/91"
  - IMAGES="leftover:30/91"
  - IMAGES="leftover:31/91"
  - IMAGES="leftover:32/91"
  - IMAGES="leftover:33/91"
  - IMAGES="leftover:34/91"
  - IMAGES="leftover:35/91"
  - IMAGES="leftover:36/91"
  - IMAGES="leftover:37/91"
  - IMAGES="leftover:38/91"
  - IMAGES="leftover:39/91"
  - IMAGES="leftover:40/91"
  - IMAGES="leftover:41/91"
  - IMAGES="leftover:42/91"
  - IMAGES="leftover:43/91"
  - IMAGES="leftover:44/91"
  - IMAGES="leftover:45/91"
  - IMAGES="leftover:46/91"
  - IMAGES="leftover:47/91"
  - IMAGES="leftover:48/91"
  - IMAGES="leftover:49/91"
  - IMAGES="leftover:50/91"
  - IMAGES="leftover:60/91"
  - IMAGES="leftover:61/91"
  - IMAGES="leftover:62/91"
  - IMAGES="leftover:63/91"
  - IMAGES="leftover:64/91"
  - IMAGES="leftover:65/91"
  - IMAGES="leftover:66/91"
  - IMAGES="leftover:67/91"
  - IMAGES="leftover:68/91"
  - IMAGES="leftover:69/91"
  - IMAGES="leftover:70/91"
  - IMAGES="leftover:70/91"
  - IMAGES="leftover:71/91"
  - IMAGES="leftover:72/91"
  - IMAGES="leftover:73/91"
  - IMAGES="leftover:74/91"
  - IMAGES="leftover:75/91"
  - IMAGES="leftover:76/91"
  - IMAGES="leftover:77/91"
  - IMAGES="leftover:78/91"
  - IMAGES="leftover:79/91"
  - IMAGES="leftover:80/91"
  - IMAGES="leftover:80/91"
  - IMAGES="leftover:81/91"
  - IMAGES="leftover:82/91"
  - IMAGES="leftover:83/91"
  - IMAGES="leftover:84/91"
  - IMAGES="leftover:85/91"
  - IMAGES="leftover:86/91"
  - IMAGES="leftover:87/91"
  - IMAGES="leftover:88/91"
  - IMAGES="leftover:89/91"
  - IMAGES="leftover:90/91"
  - IMAGES="leftover:90/91"
cache: {directories: ["$HOME/.cache/pip", "$COPS_ROOT"]}
before_install:
- ./main.sh refresh_corpusops
- sudo apt-get update -qq
- sudo apt-get install -qq -y --force-yes parallel
- sudo service docker stop
- >
  sudo bash -exc "python -c
  \"d='/etc/docker/daemon.json';
  import json;
  c = json.load(open(d));
  c['experimental'] = True;
  print(c);open(d, 'w').write(json.dumps(c))
  \"
  && systemctl restart docker"
- echo "$DOCKER_PASSWORD" | docker login --password-stdin --username="$DOCKER_RELEASER"
- i=$(whoami) && sudo chown -Rf $i $COPS_ROOT
script:
- echo "building $IMAGES" >&2
# for any released tags from where we did our last maintenance, get a chance to discover and build it
- cd "$TRAVIS_BUILD_DIR" && if ( echo $IMAGES | grep -q leftover );then  rm -f */*/*/Dockerfile && $silent ./refresh_images.sh;fi
- cd "$TRAVIS_BUILD_DIR" && export DO_RELEASE=1 && $silent ./build.sh $IMAGES
