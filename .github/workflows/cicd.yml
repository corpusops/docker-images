env:
  DOCKER_BUILDKIT: "1"
  COMPOSE_DOCKER_CLI_BUILD: "1"
  BUILDKIT_PROGRESS: "plain"
  NO_SQUASH: ""
  NO_SILENT: "1"
  NONINTERACTIVE: "1"
  FORCE_ONLINE: "1"
  NBPARALLEL: "2"
  RELEASABLE_REPOS: "^corpusops/"
  RELEASABLE_BRANCHES: "^(refs/heads/)?(master|2.0|workflows)$"
  COPS_URL: "https://github.com/corpusops/corpusops.bootstrap"
  COPS_ROOT: "${{github.workspace}}/local/corpusops.bootstrap"
  silent: "$COPS_ROOT/bin/cops_shell_common output_in_error silent_vv"
  DOCKER_RELEASER: "${{ secrets.DOCKER_HUB_USERNAME }}"
  DOCKER_PASSWORD: "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
jobs:
  r:
    runs-on: ubuntu-20.04
    env: {IMAGES: "${{matrix.IMAGES}}"}
    steps:
      - name: Set vars
        run: |-
            if ( echo "$GITHUB_REF" | egrep -q "${RELEASABLE_BRANCHES}" ) \
            && ( echo "$GITHUB_REPOSITORY" | egrep -q "${RELEASABLE_REPOS}" )
            then releasable=true;else releasable=false;fi
            echo "::set-output name=releasable::$releasable"
            echo "::set-output name=silent::$(echo $silent)"
        id: v
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Activate docker experimental
        run: |-
          sudo bash -exc "service docker stop;python -c \
          \"d='/etc/docker/daemon.json';\
          import json;c=json.load(open(d));c['experimental']=True;\
          open(d, 'w').write(json.dumps(c))\"
          systemctl restart docker"
      - uses: actions/checkout@v2
      - name: Cache multiple paths
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache
            local
          key: 6-${{ runner.os }}-${{ github.ref }}-${{ github.repository }}-venvstatics
      - name: setup
        run: set -e;i=$(whoami);sudo sh -c "chown -Rf $i .";
             ./main.sh refresh_corpusops;
             sudo sh -c 'apt-get update -qq && apt-get install -qqy --force-yes parallel'
      - name: refresh images
        run: set -e;if (echo $IMAGES|grep -q zleftover);then
             rm -f */*/*/Dockerfile&&${{steps.v.outputs.silent}} ./refresh_images.sh;
             fi
      - name: build & release
        run: set -e;
             if [ "x${{steps.v.outputs.releasable}}" = "xtrue" ];then export DO_RELEASE=1;fi;
             ./build.sh $IMAGES
# ${{steps.v.outputs.silent}} ./build.sh $IMAGES
    strategy:
      max-parallel: 5
      fail-fast: false
      matrix:
        IMAGES:
        - "library/solr/latest library/solr/7 library/solr/7-slim library/mysql/8 library/mysql/5 library/rabbitmq/3 library/rabbitmq/3-alpine"
        - "library/rabbitmq/3-management library/rabbitmq/3-management-alpine library/rabbitmq/alpine library/rabbitmq/latest library/rabbitmq/management library/rabbitmq/management-alpine library/redis/stretch"
        - "library/redis/latest library/redis/5-stretch library/redis/5 library/redis/4-stretch library/redis/4 library/memcached/latest library/memcached/alpine"
        - "library/mongo/latest library/mongo/4"
        - "library/alpine/latest library/alpine/3 mailu/rspamd/1.7 mailu/rspamd/latest mailu/rspamd/master mailu/postfix/1.7 mailu/postfix/latest"
        - "mailu/postfix/master library/traefik/alpine library/elasticsearch/5-alpine library/solr/alpine library/redis/alpine library/redis/5-alpine library/redis/4-alpine"
        - "minio/minio/edge minio/minio/latest mailhog/mailhog/latest library/solr/7-alpine"
        - "library/centos/latest library/centos/7 library/elasticsearch/1 minio/doctor/latest minio/mc/edge minio/mc/latest library/elasticsearch/2"
        - "library/mysql/latest library/elasticsearch/5 library/mongo/3 library/solr/6 library/solr/6-slim library/mariadb/latest library/mariadb/10"
        - "library/mariadb/10.1 library/mariadb/10.2 library/mariadb/10.3 library/mariadb/10.4 library/archlinux/latest"
        - "library/golang/latest library/solr/5-slim library/solr/5 library/mongo/2"
        - "library/solr/6-alpine library/solr/5-alpine library/elasticsearch/1-alpine library/elasticsearch/2-alpine seafileltd/seafile-mc/7.1.4 seafileltd/seafile-mc/7.1.5"
        - "library/docker/dind library/docker/dind-rootless library/docker/edge library/docker/edge-dind library/docker/experimental library/docker/experimental-dind library/docker/git"
        - "library/docker/latest library/docker/rc library/docker/rc-dind library/docker/rc-dind-rootless library/docker/rc-experimental library/docker/rc-experimental-dind library/docker/stable"
        - "library/docker/stable-dind library/docker/stable-dind-rootless library/docker/test library/docker/test-dind library/docker/test-dind-rootless library/redmine/4-passenger"
        #- "corpusops/test/a corpusops/test/b corpusops/test/c"
        # all images that werent explicitly told to be built would be built in the next batches
        # we span them onto N jobs
        - "zleftover:1/50"
        - "zleftover:2/50"
        - "zleftover:3/50"
        - "zleftover:4/50"
        - "zleftover:5/50"
        - "zleftover:6/50"
        - "zleftover:7/50"
        - "zleftover:8/50"
        - "zleftover:9/50"
        - "zleftover:10/50"
        - "zleftover:11/50"
        - "zleftover:12/50"
        - "zleftover:13/50"
        - "zleftover:14/50"
        - "zleftover:15/50"
        - "zleftover:16/50"
        - "zleftover:17/50"
        - "zleftover:18/50"
        - "zleftover:19/50"
        - "zleftover:20/50"
        - "zleftover:21/50"
        - "zleftover:22/50"
        - "zleftover:23/50"
        - "zleftover:24/50"
        - "zleftover:25/50"
        - "zleftover:26/50"
        - "zleftover:27/50"
        - "zleftover:28/50"
        - "zleftover:29/50"
        - "zleftover:30/50"
        - "zleftover:31/50"
        - "zleftover:32/50"
        - "zleftover:33/50"
        - "zleftover:34/50"
        - "zleftover:35/50"
        - "zleftover:36/50"
        - "zleftover:37/50"
        - "zleftover:38/50"
        - "zleftover:39/50"
        - "zleftover:40/50"
        - "zleftover:41/50"
        - "zleftover:42/50"
        - "zleftover:43/50"
        - "zleftover:44/50"
        - "zleftover:45/50"
        - "zleftover:46/50"
        - "zleftover:47/50"
        - "zleftover:48/50"
        - "zleftover:49/50"
        - "zleftover:50/50"

on:
  push:
  workflow_dispatch:
  schedule: [{cron: '1 0 1,3,5,15,17,19 * *'}]
